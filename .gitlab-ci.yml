image: docker:19.03.0

services:
  - docker:19.03.0-dind

stages:
  - test
  - build
  - deploy-1
  - deploy-2
  - deploy-3
  - deploy-4
  - deploy-5

variables:
  # MANDATORY
  DOCKER_HOST: tcp://localhost:2375
  # MANDATORY
  DOCKER_TLS_CERTDIR: ""

# ------------------------------------------------------TESTS----------------------------------------------------------

tests:
  stage: test
  script:
    - echo "nothing to do"

# ------------------------------------------------------BUILD----------------------------------------------------------

# PROD
build-production-api:
  stage: build
  only:
    refs:
      - master
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:${CI_COMMIT_SHORT_SHA} ./server
    - docker tag ${DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:${CI_COMMIT_SHORT_SHA} ${DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:latest
    - docker push ${DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:latest

build-production-web-client:
  stage: build
  only:
    refs:
      - master
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:${CI_COMMIT_SHORT_SHA} ./web
    - docker tag ${DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:${CI_COMMIT_SHORT_SHA} ${DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:latest
    - docker push ${DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:latest


build-production-apk-builder:
  stage: build
  only:
    refs:
      - master
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA} ./mobile
    - docker tag ${DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA} ${DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:latest
    - docker push ${DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:latest

# DEV

build-development-api:
  stage: build
  only:
    refs:
      - develop
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:${CI_COMMIT_SHORT_SHA} ./server
    - docker tag ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:${CI_COMMIT_SHORT_SHA} ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:latest
    - docker push ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_API}:latest

build-development-web-client:
  stage: build
  only:
    refs:
      - develop
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:${CI_COMMIT_SHORT_SHA} ./web
    - docker tag ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:${CI_COMMIT_SHORT_SHA} ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:latest
    - docker push ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}:latest

build-development-apk-builder:
  stage: build
  only:
    refs:
      - develop
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA} ./mobile
    - docker tag ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA} ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:latest
    - docker push ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:latest

# ------------------------------------------------------DEPLOY---------------------------------------------------------

# PROD

deploy-production-namespace:
  stage: deploy-1
  only:
    refs:
      - master
  variables:
    DEPLOYMENT_ENV: "production"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.namespace.yaml
    - kubectl apply -f area.namespace.yaml

deploy-production-database:
  stage: deploy-2
  only:
    refs:
      - master
  variables:
    DEPLOYMENT_ENV: "production"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s/db
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.db.configmap.yaml area.db.secrets.yaml area.db.volume.yaml area.db.deployment.yaml area.db.service.yaml
    - sed -i "s/__DB_NAME__/${DB_NAME}/" area.db.configmap.yaml
    - sed -i "s/__DB_USER__/`echo -ne ${DB_USER} | base64`/" area.db.secrets.yaml
    - sed -i "s/__DB_PASSWORD__/`echo -ne ${DB_PASSWORD} | base64`/" area.db.secrets.yaml
    - kubectl apply -f area.db.configmap.yaml area.db.secrets.yaml
    - kubectl apply -f area.db.volume.yaml
    - kubectl apply -f area.db.deployment.yaml
    - kubectl apply -f area.db.service.yaml

deploy-production-api:
  stage: deploy-3
  only:
    refs:
      - master
  environment:
    name: production-api
    url: https://api.area.b12powered.com
  variables:
    DEPLOYMENT_ENV: "production"
    DEPLOYMENT_HOST: "api.area.b12powered.com"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s/api
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.api.configmap.yaml area.api.deployment.yaml area.api.ingress.yaml area.api.secrets.yaml area.api.service.yaml
    - sed -i "s~__REGISTRY_IMAGE__~${DOCKER_REGISTRY_IMAGE_NAME_AREA_API}~" area.api.deployment.yaml
    - sed -i "s/__REGISTRY_VERSION__/${CI_COMMIT_SHORT_SHA}/" area.api.deployment.yaml
    - sed -i "s/__DB_NAME__/${DB_NAME}/" area.api.configmap.yaml
    - sed -i "s/__DB_USER__/`echo -ne ${DB_USER} | base64`/" area.api.secrets.yaml
    - sed -i "s/__DB_PASSWORD__/`echo -ne ${DB_PASSWORD} | base64`/" area.api.secrets.yaml
    - sed -i "s/__INGRESS_HOST__/${DEPLOYMENT_HOST}/" area.api.ingress.yaml
    - kubectl apply -f area.api.configmap.yaml area.api.secrets.yaml
    - kubectl apply -f area.api.deployment.yaml
    - kubectl apply -f area.api.service.yaml
    - kubectl apply -f area.api.ingress.yaml

deploy-production-apk:
  stage: deploy-4
  only:
    refs:
      - master
  script:
    - apk update && apk add --no-cache openssh sshpass wget openjdk8
    - export ANDROID_HOME=/opt/android-sdk-linux
    - mkdir -p ${ANDROID_HOME} && cd ${ANDROID_HOME} && wget -q https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -O android_tools.zip && unzip android_tools.zip && rm android_tools.zip
    - PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
    - echo yes | sdkmanager --licenses
    - cd mobile
    - ./gradlew build
    - sshpass -f ${ROOT_SSH_PASSWD} scp app/build/outputs/apk/release/app-release-unsigned.apk root@62.210.152.215:/home/develop/kubernetes/area/volumes/productionAPKData/area.apk
    - cd ..
  artifacts:
    paths:
      - mobile/app/build/outputs/apk/release/app-release-unsigned.apk

deploy-production-web:
  stage: deploy-5
  only:
    refs:
      - master
  environment:
    name: production-web
    url: https://area.b12powered.com
  variables:
    DEPLOYMENT_ENV: "production"
    DEPLOYMENT_HOST: "area.b12powered.com"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s/web
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.web.deployment.yaml area.web.ingress.yaml area.web.service.yaml area.web.volume.yaml
    - sed -i "s~__REGISTRY_IMAGE__~${DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}~" area.web.deployment.yaml
    - sed -i "s/__REGISTRY_VERSION__/${CI_COMMIT_SHORT_SHA}/" area.web.deployment.yaml
    - sed -i "s/__INGRESS_HOST__/${DEPLOYMENT_HOST}/" area.web.ingress.yaml
    - kubectl apply -f area.web.volume.yaml
    - kubectl apply -f area.web.deployment.yaml
    - kubectl apply -f area.web.service.yaml
    - kubectl apply -f area.web.ingress.yaml

# DEV

deploy-development-namespace:
  stage: deploy-1
  only:
    refs:
      - develop
  variables:
    DEPLOYMENT_ENV: "development"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.namespace.yaml
    - kubectl apply -f area.namespace.yaml

deploy-development-database:
  stage: deploy-2
  only:
    refs:
      - develop
  variables:
    DEPLOYMENT_ENV: "development"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s/db
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.db.configmap.yaml area.db.secrets.yaml area.db.volume.yaml area.db.deployment.yaml area.db.service.yaml
    - sed -i "s/__DB_NAME__/${DB_NAME}/" area.db.configmap.yaml
    - sed -i "s/__DB_USER__/`echo -ne ${DB_USER} | base64`/" area.db.secrets.yaml
    - sed -i "s/__DB_PASSWORD__/`echo -ne ${DB_PASSWORD} | base64`/" area.db.secrets.yaml
    - kubectl apply -f area.db.configmap.yaml area.db.secrets.yaml
    - kubectl apply -f area.db.volume.yaml
    - kubectl apply -f area.db.deployment.yaml
    - kubectl apply -f area.db.service.yaml

deploy-development-api:
  stage: deploy-3
  only:
    refs:
      - develop
  environment:
    name: development-api
    url: https://dev.api.area.b12powered.com
  variables:
    DEPLOYMENT_ENV: "development"
    DEPLOYMENT_HOST: "dev.api.area.b12powered.com"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s/api
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.api.configmap.yaml area.api.deployment.yaml area.api.ingress.yaml area.api.secrets.yaml area.api.service.yaml
    - sed -i "s~__REGISTRY_IMAGE__~${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_API}~" area.api.deployment.yaml
    - sed -i "s/__REGISTRY_VERSION__/${CI_COMMIT_SHORT_SHA}/" area.api.deployment.yaml
    - sed -i "s/__DB_NAME__/${DB_NAME}/" area.api.configmap.yaml
    - sed -i "s/__DB_USER__/`echo -ne ${DB_USER} | base64`/" area.api.secrets.yaml
    - sed -i "s/__DB_PASSWORD__/`echo -ne ${DB_PASSWORD} | base64`/" area.api.secrets.yaml
    - sed -i "s/__INGRESS_HOST__/${DEPLOYMENT_HOST}/" area.api.ingress.yaml
    - kubectl apply -f area.api.configmap.yaml area.api.secrets.yaml
    - kubectl apply -f area.api.deployment.yaml
    - kubectl apply -f area.api.service.yaml
    - kubectl apply -f area.api.ingress.yaml

deploy-development-apk:
  stage: deploy-4
  only:
    refs:
      - develop
      - 31-continuous-deployment
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker pull ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA}
    - mkdir apk
    - docker run ${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_APK_BUILDER}:${CI_COMMIT_SHORT_SHA} -v $(pwd)/apk:/data/apk
    - sshpass -f ${ROOT_SSH_PASSWD} scp apk/area.apk root@62.210.152.215:/home/develop/kubernetes/area/volumes/developmentAPKData/area.apk
  artifacts:
    paths:
      - apk/area.apk

deploy-development-web:
  stage: deploy-5
  only:
    refs:
      - develop
  environment:
    name: development-web
    url: https://dev.area.b12powered.com
  variables:
    DEPLOYMENT_ENV: "development"
    DEPLOYMENT_HOST: "dev.area.b12powered.com"
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} | base64 -d > $HOME/.kube/config
    - kubectl config view
    - cd k8s/web
    - sed -i "s/__ENVIRONMENT_SLUG__/${DEPLOYMENT_ENV}/" area.web.deployment.yaml area.web.ingress.yaml area.web.service.yaml area.web.volume.yaml
    - sed -i "s~__REGISTRY_IMAGE__~${DEV_DOCKER_REGISTRY_IMAGE_NAME_AREA_WEB_CLIENT}~" area.web.deployment.yaml
    - sed -i "s/__REGISTRY_VERSION__/${CI_COMMIT_SHORT_SHA}/" area.web.deployment.yaml
    - sed -i "s/__INGRESS_HOST__/${DEPLOYMENT_HOST}/" area.web.ingress.yaml
    - kubectl apply -f area.web.volume.yaml
    - kubectl apply -f area.web.deployment.yaml
    - kubectl apply -f area.web.service.yaml
    - kubectl apply -f area.web.ingress.yaml
